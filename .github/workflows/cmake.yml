name: CMake

on:
  push:
    branches: [ nncase ]
  pull_request:
    branches: [ nncase ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: Install System Requirements
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt install gcc-10 g++-10
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 50
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 50
        sudo apt-get install libegl1-mesa-dev -y
        sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler -y
        sudo apt-get install --no-install-recommends libboost-all-dev -y
        sudo apt-get install libopenblas-dev liblapack-dev libatlas-base-dev -y
        sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev -y

    - name: Setup Python
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.7
        
    - name: Install Numpy
      shell: bash
      run: |
        pip install numpy==1.19.2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        sudo unlink /usr/lib/x86_64-linux-gnu/libboost_python.so
        sudo ln -s /usr/lib/x86_64-linux-gnu/libboost_python-py36.so /usr/lib/x86_64-linux-gnu/libboost_python.so
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_OPENCV=OFF

    - name: Build
      # Build your program with the given configuration
      run: cd ${{github.workspace}}/build && sudo make all && sudo make pycaffe

    - name: Generate Package
      # generate warpctc-caffe pip package as an artifactory, need for nncase
      run: cd ${{github.workspace}}/python && python setup.py sdist

    - name: Upload a Python Package Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: warpctc-caffe-1.0.0
        path: ${{github.workspace}}/python/dist
        if-no-files-found: error

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: libcaffe
        path: ${{github.workspace}}/build/lib/libcaffe.so.1.0.0
        if-no-files-found: error
