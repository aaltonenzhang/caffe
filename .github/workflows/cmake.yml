name: CMake

on:
  push:
    branches: [ nncase ]
  pull_request:
    branches: [ nncase ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest,macos-10.15]
        include:
          - os: ubuntu-latest
            bitness: 64
          - os: macos-10.15
            bitness: 64
          # - os: windows-2019
          #   bitness: 32

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      if: runner.os != 'Macos'
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.7

    - name: Setup Python
      if: runner.os == 'Macos'
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.9

    - name: Install cibuildwheel
      shell: bash
      run: pip install cibuildwheel

    - name: Build wheels
      if: runner.os == 'Linux'
      env:
        CIBW_ARCHS: "x86_64"
        CIBW_PLATFORM: "linux"
        CIBW_BUILD: "cp37-*"
        CIBW_REPAIR_WHEEL_COMMAND: ""
        CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_24"
        CIBW_BEFORE_BUILD_LINUX: >
          apt-get update &&
          apt-get install libegl1-mesa-dev -y &&
          apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler -y &&
          apt-get install --no-install-recommends libboost-dev libboost-all-dev -y &&
          apt-get install libopenblas-dev liblapack-dev libatlas-base-dev -y &&
          apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev -y &&
          pip install numpy==1.19.2 &&
          unlink /usr/lib/x86_64-linux-gnu/libboost_python.so &&
          ln -s /usr/lib/x86_64-linux-gnu/libboost_python-py35.so /usr/lib/x86_64-linux-gnu/libboost_python.so &&
          cmake -B ./build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_OPENCV=OFF &&
          cd ./build &&
          make all &&
          make pycaffe &&
          cd ..
      shell: bash
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - name: Build wheels
      if: runner.os == 'Macos'
      env:
        CIBW_ARCHS: "x86_64"
        CIBW_PLATFORM: "macos"
        CIBW_BUILD: "cp39-*"
        CIBW_REPAIR_WHEEL_COMMAND: ""
        CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=10.15
        CIBW_BEFORE_BUILD_MACOS: >
          brew install -vd snappy leveldb gflags glog szip lmdb &&
          brew install hdf5 openblas &&
          brew install autoconf automake libtool &&
          wget -c https://github.com/aaltonenzhang/homebrew-core/blob/master/Formula/protobuf.rb &&
          wget -c https://github.com/aaltonenzhang/homebrew-core/blob/master/Formula/boost@1.59.rb &&
          wget -c https://github.com/aaltonenzhang/homebrew-core/blob/master/Formula/boost-python@1.59.rb &&
          brew install -vd protobuf.rb &&
          brew install -vd boost@1.59.rb &&
          brew install -vd boost-python@1.59.rb &&
          brew link boost@1.59 --force &&
          brew link boost-python@1.59 --force &&
          pip install numpy==1.17.5 &&
          cmake -B ./build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_OPENCV=OFF &&
          cd ./build &&
          make all &&
          make pycaffe &&
          cd ..
      shell: bash
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    # - name: Build wheels
    #   if: runner.os == 'Windows'
    #   env:
    #     CIBW_ARCHS: "x86"
    #     CIBW_PLATFORM: "windows"
    #     CIBW_BUILD: "cp37-*"
    #     CIBW_REPAIR_WHEEL_COMMAND: ""
    #     CIBW_BEFORE_BUILD_WINDOW: >
    #       cmake -B ./build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_OPENCV=OFF &&
    #       cd ./build &&
    #       make all &&
    #       make pycaffe &&
    #       cd ..
    #   shell: bash
    #   run: |
    #     python -m cibuildwheel --output-dir wheelhouse

    - name: Upload a Build Artifact
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v2.2.2
      with:
        name: warpctc-caffe-linux
        path: ${{github.workspace}}/wheelhouse/*.whl
        if-no-files-found: error

    - name: Upload a Build Artifact
      if: runner.os == 'Macos'
      uses: actions/upload-artifact@v2.2.2
      with:
        name: warpctc-caffe-macos
        path: ${{github.workspace}}/wheelhouse/*.whl
        if-no-files-found: error

    # - name: Upload a Build Artifact
    #   if: runner.os == 'Windows'
    #   uses: actions/upload-artifact@v2.2.2
    #   with:
    #     name: warpctc-caffe-windows
    #     path: ${{github.workspace}}/wheelhouse/*.whl
    #     if-no-files-found: error
